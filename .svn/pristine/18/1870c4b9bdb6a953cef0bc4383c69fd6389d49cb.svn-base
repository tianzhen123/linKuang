var viewModel,mescroll;
var arr = [
		{title:'123',
		desc:'desc',},
		{title:'123',
		desc:'desc',}];
$(function(){
	viewModel = {
		dataArr : ko.observableArray(),
	}
	ko.applyBindings(viewModel);
	
	mescroll = new MeScroll("mescroll", { //第一个参数"mescroll"对应上面布局结构div的id
       		//如果您的下拉刷新是重置列表数据,那么down完全可以不用配置,具体用法参考第一个基础案例
       		//解析: down.callback默认调用mescroll.resetUpScroll(),而resetUpScroll会将page.num=1,再触发up.callback
			down: {
				auto: true,
				callback: downCallback //下拉刷新的回调,别写成downCallback(),多了括号就自动执行方法了
			},
			up: {
				auto: false,
				callback: upCallback , //上拉加载的回调
				isBounce: false //如果您的项目是在iOS的微信,QQ,Safari等浏览器访问的,建议配置此项.解析(必读)
			}
		});
})

function backClick(){
  	summer.closeWin({});
}

function downCallback(){
	viewModel.dataArr(arr);
	mescroll.endSuccess();
}
function upCallback(page){
	viewModel.dataArr(viewModel.dataArr().concat(arr));
	mescroll.endSuccess(arr.length, true);
}
