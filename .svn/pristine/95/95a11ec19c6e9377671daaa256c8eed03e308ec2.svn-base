var ViewModel = function() {
};
var viewModel = new ViewModel();
var userInfo;//用户信息
var flag_delete=false;
var number_form = 1;
var sum_problems_form ;//问题明细表第一次初始化的值后的li总数
var singleSum_problems_form;//单个问题明细表中li的长度，为问题明细表第一次初始化的值
var data = {};
summerready = function() {
	hp_slide();//滑动事件，放在最前面
	
	/*通过ko绑定  初始化题明细表*/
	viewModel.data = ko.observableArray([{
			pk_problem_type_name:"",
			problem_detail:"",
			remark:"",
			reexamination:"待复查",
		}]);
	ko.applyBindings(viewModel);
	
	sum_problems_form = $(".problems_form li").length;//问题明细表第一次初始化的值后的li总数
	singleSum_problems_form = sum_problems_form;//单个问题明细表中li的长度，为问题明细表第一次初始化的值
	
	/*初始化主表（基本信息表）*/
	init_MainTable();
	init_formNumber();//重新给问题表单编号
	
	/*绑定事件*/
	event();
	/*添加事件*/
	event_add();
	/*提交事件*/
	event_submit();
}

/**
 *初始化主表（基本信息表） 
 */
function init_MainTable(){
	//时间
	var p_time = getCurrentDate();
	$("#p_time").val(p_time);
	data.p_time = p_time;
	
	//获取姓名、手机号，将姓名显示为群监员，将姓名和手机号存到data中
	var userInfo = summer.getStorage("userInfo");
	var def2 = userInfo.mobile;
	var name = userInfo.name;
	
	$("#pk_supervisor_name").val(name);
	data.pk_supervisor_name = name;
	data.def2 = def2;
}
/**
 * 重新给问题表单编号 
 * 用于：
 * 初始化时，添加问题表单后，删除问题表单后
 */
function init_formNumber(){
	sum_problems_form = $(".problems_form li").length;
	var sum = sum_problems_form/singleSum_problems_form;//问题明细表的个数sum = 明细表li总数sum_problems_form / 单个明细表li总数singleSum_problems_form
		
	for(var i=0;i<sum;i++){
		$(".problems_form li").eq(singleSum_problems_form*i).find(".title_problems_form").html("问题明细表("+i+")");
	}
}

/**
 * 添加问题明细表事件
 */
function event_add(){
	/*新增问题 点击事件   实现新一个增问题分类*/
	$("#add").on("click", function(sender, args) {//新增问题
		viewModel.data.push({//必须通过此方法（逐个列出要添加的数据）来添加，不能通过创建对象，然后把对象放进去的方法（数据会都绑定成一样的，一个动都动）
			pk_problem_type_name:"",
			problem_detail:"",
			remark:"",
			reexamination:"待复查",
		});
		event();
		init_formNumber();//重新给问题表单编号
	});
}
/**
 * 提交事件
 */
function event_submit(){
	/*提交*/
	$("#submit").on("click", function(sender, args) {
		//判断必填项是否为空
		var value_hasNull = hasNull();
		if(value_hasNull == true){
			hp_alert("请填写标题和内容！");
		}else{
			saveClick();
		}
		
	});
}
/**
 * 右滑执行的方法
 */
function function_rightSlide(){
	summer.closeWin();
}

/**
 * 网络添加事件
 */
function saveClick(){
	
/**
 * 点击提交 触发提交事件
 * 获取前端页面的数据
 * 将数据写入json中
 * 提交给服务器
 * 关闭页面
 */
	
	var requestid = ""+getHttp()+"partyconstrutproject/problemRectification/add";
	//往json插入数据
	//主表（基本信息表）
	data.p_place = $("#p_place").val();
	data.p_code = $("#p_code").val();
	data.headmen = $("#headmen").val();
	data.p_time = resetDate($("#p_time").val());
	data.pk_org = " ";
	//子表（问题明细表）
	var length_viewModel = viewModel.data().length;
	data.id_problemdetail=[];
	for (var k = 0; k < length_viewModel; k++) {
		var reexamination = viewModel.data()[k].reexamination;//编辑时间
		viewModel.data()[k].reexamination = resetReexamination(reexamination);
		
		//将子表的数据赋值给data_detail，最后给data.id_problemdetail
		/*var data_detail = {};
		data_detail.fk_id_problemdetail = viewModel.data()[k].fk_id_problemdetail;
		data_detail.pk_problem_detail = viewModel.data()[k].pk_problem_detail;
		data_detail.pk_problem_type = viewModel.data()[k].pk_problem_type;
		data_detail.pk_problem_type_name = viewModel.data()[k].pk_problem_type_name;
		data_detail.problem_detail = viewModel.data()[k].problem_detail;
		data_detail.reexamination = viewModel.data()[k].reexamination;
		data_detail.remark = viewModel.data()[k].remark;
		if(viewModel.data()[k].pk_org==null){
			data_detail.pk_org = " ";
		}else{
			data_detail.pk_org = viewModel.data()[k].pk_org;
		}
		data_detail.creator = viewModel.data()[k].creator;
		data_detail.def0 = viewModel.data()[k].def0;
		data_detail.def1 = viewModel.data()[k].def1;
		data_detail.def2 = viewModel.data()[k].def2;
		data_detail.def3 = viewModel.data()[k].def3;
		data_detail.def4 = viewModel.data()[k].def4;
		*/
		data.id_problemdetail.push(viewModel.data()[k]);
	}
	
	//data.id_problemdetail=viewModel.data();
	
	$.ajax({
        type: "post",
        url: requestid,
        contentType: 'application/json;charset=utf-8',
        data: JSON.stringify(data),//将对象序列化成JSON字符串
        success: function (res) {
            if (res) {
                if (res.success == 'success') {
                	hp_alert("提交成功",backClick);
                } else {
                	
                }
            } else {
            	
            }
        } 
    });
	
}
function resetReexamination(str){
	var number ="";
	if(str=="合格"){
		number = 0;
	}else if(str=="不合格"){
		number = 1;
	}else{
		number ;
	}
	return number;
}
/**
 *	格式化时间
 * 	输入str：2018/02/27
 * 	输出date：1519660800000
 */
function resetDate(str) {
	var date = str;
	date += " ";
   	date += "00:00:00";
   	date = Date.parse(date);
    return date;
}


/**
 *获取当前时间 
 */
function getCurrentDate() {
	var date = new Date();
    var seperator1 = "/";
    var seperator2 = ":";
    var year = date.getFullYear();
    var month = date.getMonth() + 1;
    var strDate = date.getDate();
    var strHours = date.getHours();
    var strMinutes = date.getMinutes();
    var strSeconds = date.getSeconds();
    
   	//拼时间
    var currentdate = year + seperator1 + addZero(month) + seperator1 + addZero(strDate);
           // + " " + addZero(strHours) + seperator2 + addZero(strMinutes) + seperator2 + addZero(strSeconds);
    return currentdate;
}
/**
 * 时间为单位数时,前面加0
 */
function addZero(time){
	if(parseInt(time) < 10){  
        time = '0'+time;  
     }  
     return time;
}

/**
 *关闭窗口
 */
function backClick() {
	summer.closeWin({});
}

/**
 * 绑定事件 
 */
function event(){
	event_problems();//问题分类事件 
	event_reexamination();//复查情况事件
	event_delete();//删除事件
}


/**
 *问题分类事件 
 */
function event_problems(){
	/*移除之前绑定的事件（必须移除，否则会出现事件出错，例如：事件不可用、多次触发该事件）*/
	$(".problems").unbind("click");
	$(".problems_content").find("input").unbind("click");
	
	/*一、问题分类 */
	/*实现选择问题分类时，把选择的值赋给上面li里的input（选择后自动隐藏），同时把选择的值赋给viewModel.data中对应的pk_problem_type*/
	$(".problems").on("click", function(sender, args) {//问题分类
		$(this).parentsUntil("li").last().parent().next().toggle();
		
	});
	$(".problems_content").find("input").on("click",function(){//分类内容
	   	var obj = $(this).parentsUntil("li").last().parent()//li
      	/*1.把选择的值赋给上面li里的input  */
      	obj.prev().find("input").val(this.value);
    	/*2.把选择的值赋给viewModel.data中对应的pk_problem_type*/
    	var index = obj.index();//一组li
    	var number = parseInt(index/singleSum_problems_form);
    	viewModel.data()[number].pk_problem_type_name = this.value;
    	if(this.value=="建设问题"){
    		viewModel.data()[number].pk_problem_type = "45c5aa69-f9cf-4864-9ade-e57666d3339b";
    	}else if(this.value=="基础问题"){
    		viewModel.data()[number].pk_problem_type = "47997745-fc66-498e-9a6c-8fb3916ab67e";
    	}else{
    		viewModel.data()[number].pk_problem_type = "1a1c8c67-5e0a-400d-b8e4-148d70ce8b8e";
    	}
    	/*3.选择后自动隐藏*/
	    $(this).parentsUntil("li").last().parent().hide();
	})

}

/**
 *复查情况事件 
 */
function event_reexamination(){
	/*移除之前绑定的事件（必须移除，否则会出现事件出错，例如：事件不可用、多次触发该事件）*/
	$(".reexamination").unbind("click");
	$(".reexamination_content").find("input").unbind("click");
	
	/*二、复查情况   */
	/*实现选择复查情况时，把选择的值赋给上面li里的input（选择后自动隐藏），同时把选择的值赋给viewModel.data中对应的reexamination*/
	$(".reexamination").on("click", function(sender, args) {//问题分类
		$(this).parentsUntil("li").last().parent().next().toggle();
		
	});
	$(".reexamination_content").find("input").on("click",function(){
      	var obj = $(this).parentsUntil("li").last().parent()//li
      	/*1.把选择的值赋给上面li里的input  */
      	obj.prev().find("input").val(this.value);
    	/*2.把选择的值赋给viewModel.data中对应的pk_problem_type*/
    	var index = obj.index();//一组li
    	var number = parseInt(index/singleSum_problems_form);
    	viewModel.data()[number].reexamination = this.value;
    	/*3.选择后自动隐藏*/
    	$(this).parentsUntil("li").last().parent().hide();
    	//实现选择问题分类，修改viewModel中的值
	})
}


/**
 * 删除事件
 */
function event_delete(){
	/*移除之前绑定的事件（必须移除，否则会出现事件出错，例如：事件不可用、多次触发该事件）*/
	$(".delete").unbind("click");
	
	/*隐藏 第一个的问题明细表的删除按钮*/
	//$(".problems_form li").eq(0).find(".delete").hide();
	
	/*三、删除问题明细表*/
	$(".delete").on("click", function() {//问题分类
		/*1.变量*/
		var obj = $(this).parentsUntil("li").last().parent()//li
		var index = obj.index();//一组li
		var number = parseInt(index/singleSum_problems_form);//点击的li对应的数据在viewModel.datal中的位置
		
		UM.confirm({
		    text: '你确定要删除该问题明细吗？',
		    btnText: ["取消", "确定"],
		    overlay: true,
		    ok: function () {
		        /*2.删除 viewModel.datal中对应位置的数据*/
				viewModel.data().splice(number,1);
				
				
				/*3.删除该问题明细表中一组li*/
				for(var i=1;i<singleSum_problems_form;i++){
					obj.next().remove();
				}
				obj.remove();	
				
				init_formNumber();//重新给问题表单编号
		    },
		    cancle: function () {
		       
		    }
		});
	});
	
}





